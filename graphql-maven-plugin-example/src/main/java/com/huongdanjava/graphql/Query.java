 /** Generated by the 'OBJECT' default template from graphql-java-generator */
package com.huongdanjava.graphql;

import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.CompletableFuture;

import org.dataloader.DataLoader;

import graphql.schema.DataFetchingEnvironment;


import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLObjectType;
import java.util.List;

import com.graphql_java_generator.annotation.GraphQLDirective;

/**
 *
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLObjectType("Query")
@SuppressWarnings("unused")
public class Query
{
/** Object content, generated by the 'object_content.vm.java' default template from graphql-java-generator */


 

	public Query(){
		// No action
	}

	@GraphQLNonScalar( fieldName = "students", graphQLTypeSimpleName = "Student", javaClass = com.huongdanjava.graphql.Student.class, listDepth = 1)
	List<com.huongdanjava.graphql.Student> students;



	public void setStudents(List<com.huongdanjava.graphql.Student> students) {
		this.students = students;
	}

	public List<com.huongdanjava.graphql.Student> getStudents() {
		return this.students;
	}
		

  
    public String toString() {
        return "Query {" //$NON-NLS-1$
				+ "students: " + this.students //$NON-NLS-1$
        		+ "}"; //$NON-NLS-1$
    }

	public static Builder builder() {
		return new Builder();
	}

	/**
	 * The Builder that helps building instance of this POJO. You can get an instance of this class, by calling the
	 * {@link #builder()}
	 */
	public static class Builder {
		private List<com.huongdanjava.graphql.Student> students;


		public Builder withStudents(List<com.huongdanjava.graphql.Student> studentsParam) {
			this.students = studentsParam;
			return this;
		}


		public Query build() {
			Query _object = new Query();
			_object.setStudents(this.students);
			return _object;
		}
	}
}
