 /** Generated by the 'OBJECT' default template from graphql-java-generator */
package com.huongdanjava.graphql;

import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.CompletableFuture;

import org.dataloader.DataLoader;

import graphql.schema.DataFetchingEnvironment;


import com.graphql_java_generator.annotation.GraphQLObjectType;
import com.graphql_java_generator.annotation.GraphQLScalar;

import com.graphql_java_generator.annotation.GraphQLDirective;

/**
 *
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLObjectType("Student")
@SuppressWarnings("unused")
public class Student
{
/** Object content, generated by the 'object_content.vm.java' default template from graphql-java-generator */


 

	public Student(){
		// No action
	}

	@GraphQLScalar( fieldName = "id", graphQLTypeSimpleName = "ID", javaClass = java.util.UUID.class, listDepth = 0)
	java.util.UUID id;


	@GraphQLScalar( fieldName = "code", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class, listDepth = 0)
	java.lang.String code;


	@GraphQLScalar( fieldName = "name", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class, listDepth = 0)
	java.lang.String name;


	@GraphQLScalar( fieldName = "age", graphQLTypeSimpleName = "Int", javaClass = java.lang.Integer.class, listDepth = 0)
	java.lang.Integer age;


	@GraphQLScalar( fieldName = "address", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class, listDepth = 0)
	java.lang.String address;


	@GraphQLScalar( fieldName = "clazz", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class, listDepth = 0)
	java.lang.String clazz;



	public void setId(java.util.UUID id) {
		this.id = id;
	}

	public java.util.UUID getId() {
		return this.id;
	}
		

  
	public void setCode(java.lang.String code) {
		this.code = code;
	}

	public java.lang.String getCode() {
		return this.code;
	}
		

  
	public void setName(java.lang.String name) {
		this.name = name;
	}

	public java.lang.String getName() {
		return this.name;
	}
		

  
	public void setAge(java.lang.Integer age) {
		this.age = age;
	}

	public java.lang.Integer getAge() {
		return this.age;
	}
		

  
	public void setAddress(java.lang.String address) {
		this.address = address;
	}

	public java.lang.String getAddress() {
		return this.address;
	}
		

  
	public void setClazz(java.lang.String clazz) {
		this.clazz = clazz;
	}

	public java.lang.String getClazz() {
		return this.clazz;
	}
		

  
    public String toString() {
        return "Student {" //$NON-NLS-1$
				+ "id: " + this.id //$NON-NLS-1$
				+ ", " //$NON-NLS-1$
				+ "code: " + this.code //$NON-NLS-1$
				+ ", " //$NON-NLS-1$
				+ "name: " + this.name //$NON-NLS-1$
				+ ", " //$NON-NLS-1$
				+ "age: " + this.age //$NON-NLS-1$
				+ ", " //$NON-NLS-1$
				+ "address: " + this.address //$NON-NLS-1$
				+ ", " //$NON-NLS-1$
				+ "clazz: " + this.clazz //$NON-NLS-1$
        		+ "}"; //$NON-NLS-1$
    }

	public static Builder builder() {
		return new Builder();
	}

	/**
	 * The Builder that helps building instance of this POJO. You can get an instance of this class, by calling the
	 * {@link #builder()}
	 */
	public static class Builder {
		private java.util.UUID id;
		private java.lang.String code;
		private java.lang.String name;
		private java.lang.Integer age;
		private java.lang.String address;
		private java.lang.String clazz;


		public Builder withId(java.util.UUID idParam) {
			this.id = idParam;
			return this;
		}

		public Builder withCode(java.lang.String codeParam) {
			this.code = codeParam;
			return this;
		}

		public Builder withName(java.lang.String nameParam) {
			this.name = nameParam;
			return this;
		}

		public Builder withAge(java.lang.Integer ageParam) {
			this.age = ageParam;
			return this;
		}

		public Builder withAddress(java.lang.String addressParam) {
			this.address = addressParam;
			return this;
		}

		public Builder withClazz(java.lang.String clazzParam) {
			this.clazz = clazzParam;
			return this;
		}


		public Student build() {
			Student _object = new Student();
			_object.setId(this.id);
			_object.setCode(this.code);
			_object.setName(this.name);
			_object.setAge(this.age);
			_object.setAddress(this.address);
			_object.setClazz(this.clazz);
			return _object;
		}
	}
}
