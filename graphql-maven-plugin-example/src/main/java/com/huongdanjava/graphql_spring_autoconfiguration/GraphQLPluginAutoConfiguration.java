/** Generated by the 'SERVER_SPRING_AUTO_CONFIGURATION_CLASS' default template from graphql-java-generator */
package com.huongdanjava.graphql_spring_autoconfiguration;

import org.springframework.boot.autoconfigure.AutoConfiguration;
import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
import org.springframework.context.annotation.Bean;
import org.springframework.graphql.execution.BatchLoaderRegistry;

/**
 * This Spring autoconfiguration class is used to declare default beans, that can then be overridden, thanks to the
 * &amp;Primary spring annotation. 
 */
@AutoConfiguration
public class GraphQLPluginAutoConfiguration {

	/**
	 * Default declaration of the spring controller for the entity <code>${dataFetcherDelegate.type.classSimpleName}</code>. This
	 * default spring can be overridden by declaring a Spring Bean of same type and name, that has the &amp;Primary spring annotation.<br/>
	 * The <code>com.huongdanjava.graphql.util.QueryController</code> bean must be a valid bean that can be discovered by
	 * the <code>AnnotatedControllerConfigurer</code> spring configurer, for this configurer to work. But it must not be discovered. So it 
	 * is excluded in the {@link GraphQLServerMain} configuration.
	 */
	@Bean
	@ConditionalOnMissingBean(name = "queryController")
	@SuppressWarnings("static-method")
	com.huongdanjava.graphql.util.QueryController queryController(BatchLoaderRegistry registry) {
		return new com.huongdanjava.graphql.util.QueryController();
	}

	/**
	 * Default declaration of the spring controller for the entity <code>${dataFetcherDelegate.type.classSimpleName}</code>. This
	 * default spring can be overridden by declaring a Spring Bean of same type and name, that has the &amp;Primary spring annotation.<br/>
	 * The <code>com.huongdanjava.graphql.util.StudentController</code> bean must be a valid bean that can be discovered by
	 * the <code>AnnotatedControllerConfigurer</code> spring configurer, for this configurer to work. But it must not be discovered. So it 
	 * is excluded in the {@link GraphQLServerMain} configuration.
	 */
	@Bean
	@ConditionalOnMissingBean(name = "studentController")
	@SuppressWarnings("static-method")
	com.huongdanjava.graphql.util.StudentController studentController(BatchLoaderRegistry registry) {
		return new com.huongdanjava.graphql.util.StudentController(registry);
	}
}
