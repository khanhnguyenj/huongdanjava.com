/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.6.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.huongdanjava.graphql.web;

import com.huongdanjava.graphql.dto.Student;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-06-27T15:23:22.901157-04:00[America/New_York]")
@Validated
@Tag(name = "students", description = "the students API")
public interface StudentsApi {

    default StudentsApiDelegate getDelegate() {
        return new StudentsApiDelegate() {};
    }

    /**
     * GET /students/names : Get student names
     *
     * @return Get student information (status code 200)
     */
    @Operation(
        operationId = "getStudentNames",
        summary = "Get student names",
        responses = {
            @ApiResponse(responseCode = "200", description = "Get student information", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = String.class)))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/students/names",
        produces = { "application/json" }
    )
    default ResponseEntity<List<String>> getStudentNames(
        
    ) {
        return getDelegate().getStudentNames();
    }


    /**
     * GET /students : Get all students information, can be filtered by clazz name
     *
     * @param clazz Class of students (optional)
     * @return Get all students information (status code 200)
     */
    @Operation(
        operationId = "getStudents",
        summary = "Get all students information, can be filtered by clazz name",
        responses = {
            @ApiResponse(responseCode = "200", description = "Get all students information", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = Student.class)))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/students",
        produces = { "application/json" }
    )
    default ResponseEntity<List<Student>> getStudents(
        @Parameter(name = "clazz", description = "Class of students", in = ParameterIn.QUERY) @Valid @RequestParam(value = "clazz", required = false) String clazz
    ) {
        return getDelegate().getStudents(clazz);
    }

}
